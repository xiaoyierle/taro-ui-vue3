import{f as n,g as s,p as a,B as t,j as p,k as e}from"./common-03e26d29.js";const o='{"title":"Icon 图标","frontmatter":{},"headers":[{"level":2,"title":"使用指南","slug":"使用指南"},{"level":2,"title":"一般用法","slug":"一般用法"},{"level":2,"title":"使用第三方字体图标库","slug":"使用第三方字体图标库"},{"level":3,"title":"步骤一：配置 postcss 小程序端样式引用本地资源内联","slug":"步骤一：配置-postcss-小程序端样式引用本地资源内联"},{"level":3,"title":"步骤二：编写字体图标库 css (以下代码为 demo，请自行参考第三方库按照下面方式引入)","slug":"步骤二：编写字体图标库-css-以下代码为-demo，请自行参考第三方库按照下面方式引入"},{"level":3,"title":"步骤三：在 app.js 中全局引入 icon.scss","slug":"步骤三：在-app-js-中全局引入-icon-scss"},{"level":3,"title":"步骤四：更改微信基础库版本","slug":"步骤四：更改微信基础库版本"},{"level":3,"title":"步骤五：使用 AtIcon","slug":"步骤五：使用-aticon"},{"level":2,"title":"Icon 参数","slug":"icon-参数"},{"level":2,"title":"图标示例","slug":"图标示例"},{"level":3,"title":"主要","slug":"主要"},{"level":3,"title":"文件","slug":"文件"},{"level":3,"title":"文本","slug":"文本"},{"level":3,"title":"箭头","slug":"箭头"},{"level":3,"title":"媒体控制","slug":"媒体控制"},{"level":3,"title":"多媒体","slug":"多媒体"},{"level":3,"title":"Logo","slug":"logo"}],"relativePath":"docs/icon.md","lastUpdated":1607242430190.2942}';var c={};const l=t('<h1 id="icon-图标"><a class="header-anchor" href="#icon-图标" aria-hidden="true">#</a> Icon 图标</h1><hr><p>用于展示 ICON。该组件的 ICON 图形基于 Webfont，因此可任意放大、改变颜色。</p><blockquote><p><strong>P.S.不推荐使用此组件，该组件是支持自定义主题功能前的产物</strong></p></blockquote><h2 id="使用指南"><a class="header-anchor" href="#使用指南" aria-hidden="true">#</a> 使用指南</h2><p>在 Taro 文件中引入组件</p><div class="language-typescript"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> AtIcon <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;taro-ui-vue3&#39;</span>\n</code></pre></div><p><strong>组件依赖的样式文件（仅按需引用时需要）</strong></p><div class="language-scss"><pre><code><span class="token keyword">@import</span> <span class="token string">&quot;taro-ui-vue3/dist/style/components/icon.scss&quot;</span><span class="token punctuation">;</span>\n</code></pre></div><p><strong>推荐使用新的引入方式，采用传统的类名图标方式即可，例如：</strong></p><div class="language-typescript"><pre><code><span class="token operator">&lt;</span>view <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&#39;at-icon at-icon-settings&#39;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">&gt;</span>\n</code></pre></div><h2 id="一般用法"><a class="header-anchor" href="#一般用法" aria-hidden="true">#</a> 一般用法</h2><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AtIcon</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>clock<span class="token punctuation">&#39;</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>30<span class="token punctuation">&#39;</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>#F00<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>AtIcon</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h2 id="使用第三方字体图标库"><a class="header-anchor" href="#使用第三方字体图标库" aria-hidden="true">#</a> 使用第三方字体图标库</h2><p>可自行下载 <a href="https://ionicons.com/" target="_blank" rel="noopener noreferrer">Ionicons</a> 或 <a href="http://fontawesome.dashgame.com/" target="_blank" rel="noopener noreferrer">Font Awesome</a> 等字体图标库，并按照以下步骤自行扩展字体图标库。（拓展字体图标库，并不影响原有图标的使用）</p><h3 id="步骤一：配置-postcss-小程序端样式引用本地资源内联"><a class="header-anchor" href="#步骤一：配置-postcss-小程序端样式引用本地资源内联" aria-hidden="true">#</a> 步骤一：配置 postcss 小程序端样式引用本地资源内联</h3><div class="language-typescript"><pre><code><span class="token comment">/* config/dev.js */</span>\n<span class="token keyword">module</span><span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  env<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token constant">NODE_ENV</span><span class="token operator">:</span> <span class="token string">&#39;&quot;development&quot;&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  defineConstants<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 小程序端专用配置</span>\n  weapp<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token keyword">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      postcss<span class="token operator">:</span> <span class="token punctuation">{</span>\n        autoprefixer<span class="token operator">:</span> <span class="token punctuation">{</span>\n          enable<span class="token operator">:</span> <span class="token boolean">true</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token comment">// 小程序端样式引用本地资源内联配置</span>\n        url<span class="token operator">:</span> <span class="token punctuation">{</span>\n          enable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          config<span class="token operator">:</span> <span class="token punctuation">{</span>\n            limit<span class="token operator">:</span> <span class="token number">10240</span> <span class="token comment">// 文件大小限制</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  h5<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">/* config/prod.js */</span>\n<span class="token keyword">module</span><span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  env<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token constant">NODE_ENV</span><span class="token operator">:</span> <span class="token string">&#39;&quot;production&quot;&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  defineConstants<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 小程序端专用配置</span>\n  weapp<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token keyword">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      postcss<span class="token operator">:</span> <span class="token punctuation">{</span>\n        autoprefixer<span class="token operator">:</span> <span class="token punctuation">{</span>\n          enable<span class="token operator">:</span> <span class="token boolean">true</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token comment">// 小程序端样式引用本地资源内联配置</span>\n        url<span class="token operator">:</span> <span class="token punctuation">{</span>\n          enable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          config<span class="token operator">:</span> <span class="token punctuation">{</span>\n            limit<span class="token operator">:</span> <span class="token number">10240</span> <span class="token comment">// 文件大小限制</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  h5<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="步骤二：编写字体图标库-css-以下代码为-demo，请自行参考第三方库按照下面方式引入"><a class="header-anchor" href="#步骤二：编写字体图标库-css-以下代码为-demo，请自行参考第三方库按照下面方式引入" aria-hidden="true">#</a> 步骤二：编写字体图标库 css (以下代码为 demo，请自行参考第三方库按照下面方式引入)</h3><div class="language-css"><pre><code><span class="token comment">/* icon.scss */</span>\n<span class="token atrule"><span class="token rule">@font-face</span></span> <span class="token punctuation">{</span>\n  <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">&#39;FontAwesome&#39;</span><span class="token punctuation">;</span>\n  <span class="token comment">/* 自行安装第三方字体图标库 */</span>\n  <span class="token property">src</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;./assets/fonts/fontawesome-webfont.eot?v=4.7.0&#39;</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span>\n  <span class="token property">src</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;./assets/fonts/fontawesome-webfont.woff2?v=4.7.0&#39;</span><span class="token punctuation">)</span></span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&#39;woff2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;./assets/fonts/fontawesome-webfont.woff?v=4.7.0&#39;</span><span class="token punctuation">)</span></span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&#39;woff&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;./assets/fonts/fontawesome-webfont.ttf?v=4.7.0&#39;</span><span class="token punctuation">)</span></span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&#39;truetype&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token property">font-weight</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>\n  <span class="token property">font-style</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">/* 根据第三方字体图标库编写 */</span>\n<span class="token comment">/* 举例：fa 就是 prefixClass 的值，下面的的图标 css class 命名都要用 fa- 开头  */</span>\n<span class="token selector">.fa</span> <span class="token punctuation">{</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>\n  <span class="token comment">/* 以下的 font 与上面 @font-face 的 font-family 要一致*/</span>\n  <span class="token property">font</span><span class="token punctuation">:</span> normal normal normal 14px/1 FontAwesome<span class="token punctuation">;</span>\n  <span class="token property">font-size</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>\n  <span class="token property">text-rendering</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>\n  <span class="token property">-webkit-font-smoothing</span><span class="token punctuation">:</span> antialiased<span class="token punctuation">;</span>\n  <span class="token property">-moz-osx-font-smoothing</span><span class="token punctuation">:</span> grayscale<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.fa-clock:before</span> <span class="token punctuation">{</span>\n  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&quot;\\f00c&quot;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="步骤三：在-app-js-中全局引入-icon-scss"><a class="header-anchor" href="#步骤三：在-app-js-中全局引入-icon-scss" aria-hidden="true">#</a> 步骤三：在 app.js 中全局引入 icon.scss</h3><div class="language-typescript"><pre><code><span class="token comment">/* app.js */</span>\n<span class="token keyword">import</span> <span class="token string">&#39;./icon.scss&#39;</span>\n</code></pre></div><h3 id="步骤四：更改微信基础库版本"><a class="header-anchor" href="#步骤四：更改微信基础库版本" aria-hidden="true">#</a> 步骤四：更改微信基础库版本</h3><p>在开发者工具 <code>设置-项目设置-调试基础库</code> 设置版本 <code>2.2.3</code> 以上</p><h3 id="步骤五：使用-aticon"><a class="header-anchor" href="#步骤五：使用-aticon" aria-hidden="true">#</a> 步骤五：使用 <code>AtIcon</code></h3><div class="language-typescript"><pre><code><span class="token operator">&lt;</span>AtIcon prefixClass<span class="token operator">=</span><span class="token string">&#39;fa&#39;</span> value<span class="token operator">=</span><span class="token string">&#39;clock&#39;</span> size<span class="token operator">=</span><span class="token string">&#39;30&#39;</span> color<span class="token operator">=</span><span class="token string">&#39;#F00&#39;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>AtIcon<span class="token operator">&gt;</span>\n</code></pre></div><h2 id="icon-参数"><a class="header-anchor" href="#icon-参数" aria-hidden="true">#</a> Icon 参数</h2><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">说明</th><th style="text-align:left;">类型</th><th style="text-align:left;">可选值</th><th style="text-align:left;">默认值</th></tr></thead><tbody><tr><td style="text-align:left;">prefixClass</td><td style="text-align:left;">className 前缀，用于第三方字体图标库，比如想使用&#39;fa fa-clock&#39; 的图标，则 传入<code>prefixClass=&#39;fa&#39; value=&#39;clock&#39;</code></td><td style="text-align:left;">String</td><td style="text-align:left;">-</td><td style="text-align:left;">&#39;at-icon&#39;</td></tr><tr><td style="text-align:left;">value</td><td style="text-align:left;">图标图案</td><td style="text-align:left;">String</td><td style="text-align:left;">参考下表</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;">size</td><td style="text-align:left;">图标大小</td><td style="text-align:left;">String / Number</td><td style="text-align:left;">大于10的整数</td><td style="text-align:left;">24</td></tr><tr><td style="text-align:left;">color</td><td style="text-align:left;">图标颜色</td><td style="text-align:left;">String</td><td style="text-align:left;">可被CSS支持的颜色单位</td><td style="text-align:left;">-</td></tr></tbody></table><h2 id="图标示例"><a class="header-anchor" href="#图标示例" aria-hidden="true">#</a> 图标示例</h2><h3 id="主要"><a class="header-anchor" href="#主要" aria-hidden="true">#</a> 主要</h3>',29),r=p("h3",{id:"文件"},[p("a",{class:"header-anchor",href:"#文件","aria-hidden":"true"},"#"),e(" 文件")],-1),i=p("h3",{id:"文本"},[p("a",{class:"header-anchor",href:"#文本","aria-hidden":"true"},"#"),e(" 文本")],-1),u=p("h3",{id:"箭头"},[p("a",{class:"header-anchor",href:"#箭头","aria-hidden":"true"},"#"),e(" 箭头")],-1),k=p("h3",{id:"媒体控制"},[p("a",{class:"header-anchor",href:"#媒体控制","aria-hidden":"true"},"#"),e(" 媒体控制")],-1),d=p("h3",{id:"多媒体"},[p("a",{class:"header-anchor",href:"#多媒体","aria-hidden":"true"},"#"),e(" 多媒体")],-1),h=p("h3",{id:"logo"},[p("a",{class:"header-anchor",href:"#logo","aria-hidden":"true"},"#"),e(" Logo")],-1);c.render=function(t,p,e,o,c,f){return n(),s("div",null,[l,a(" <IconList type='main'></IconList> "),r,a(" <IconList type='file'></IconList> "),i,a(" <IconList type='text'></IconList> "),u,a(" <IconList type='arrow'></IconList> "),k,a(" <IconList type='media'></IconList> "),d,a(" <IconList type='photo'></IconList> "),h,a(" <IconList type='logo'></IconList> ")])};export default c;export{o as __pageData};
