import{f as a,g as t,B as n}from"./common-03e26d29.js";const s='{"title":"Modal 模态框","frontmatter":{},"headers":[{"level":2,"title":"使用指南","slug":"使用指南"},{"level":2,"title":"一般用法","slug":"一般用法"},{"level":2,"title":"简化使用","slug":"简化使用"},{"level":2,"title":"AtModal 参数","slug":"atmodal-参数"},{"level":2,"title":"AtModal 事件","slug":"atmodal-事件"}],"relativePath":"docs/modal.md","lastUpdated":1607242430491.0132}';var e={};const o=n('<h1 id="modal-模态框"><a class="header-anchor" href="#modal-模态框" aria-hidden="true">#</a> Modal 模态框</h1><hr><p>提供一个简单的 <code>Modal</code> 框，也可以作为 <code>Dialog (对话框)</code> 之类的组件使用，在页面上的层级为 <code>1000</code></p><h2 id="使用指南"><a class="header-anchor" href="#使用指南" aria-hidden="true">#</a> 使用指南</h2><p>在 Taro 文件中引入组件</p><div class="language-typescript"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> AtModal<span class="token punctuation">,</span> AtModalHeader<span class="token punctuation">,</span> AtModalContent<span class="token punctuation">,</span> AtModalAction <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;taro-ui-vue3&#39;</span>\n</code></pre></div><blockquote><p>由于微信小程序的限制，在 <code>Modal</code> 组件中使用一些客户端创建的原生组件（如：<code>textarea</code>、<code>input</code>等）时，即使 <code>Modal</code> 组件处于隐藏状态，原生组件依然会在页面上显示，具体参见微信小程序文档：<a href="https://developers.weixin.qq.com/miniprogram/dev/component/native-component.html" target="_blank" rel="noopener noreferrer">原生组件</a>。</p></blockquote><p><strong>组件依赖的样式文件（仅按需引用时需要）</strong></p><div class="language-scss"><pre><code><span class="token keyword">@import</span> <span class="token string">&quot;taro-ui-vue3/dist/style/components/modal.scss&quot;</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="一般用法"><a class="header-anchor" href="#一般用法" aria-hidden="true">#</a> 一般用法</h2><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AtModal</span> <span class="token attr-name">isOpened</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AtModalHeader</span><span class="token punctuation">&gt;</span></span>标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>AtModalHeader</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AtModalContent</span><span class="token punctuation">&gt;</span></span>\n    这里是正文内容，欢迎加入京东凹凸实验室\n    这里是正文内容，欢迎加入京东凹凸实验室\n    这里是正文内容，欢迎加入京东凹凸实验室\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>AtModalContent</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AtModalAction</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">&gt;</span></span>取消<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">&gt;</span></span>确定<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>AtModalAction</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>AtModal</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h2 id="简化使用"><a class="header-anchor" href="#简化使用" aria-hidden="true">#</a> 简化使用</h2><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AtModal</span>\n  <span class="token attr-name">isOpened</span>\n  <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>标题<span class="token punctuation">&#39;</span></span>\n  <span class="token attr-name">cancelText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>取消<span class="token punctuation">&#39;</span></span>\n  <span class="token attr-name">confirmText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>确认<span class="token punctuation">&#39;</span></span>\n  <span class="token attr-name">@close</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleClose<span class="token punctuation">&quot;</span></span>\n  <span class="token attr-name">@cancel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleCancel<span class="token punctuation">&quot;</span></span>\n  <span class="token attr-name">@confirm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleConfirm<span class="token punctuation">&quot;</span></span>\n  <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>欢迎加入京东凹凸实验室\\n\\r欢迎加入京东凹凸实验室<span class="token punctuation">&#39;</span></span>\n<span class="token punctuation">/&gt;</span></span>\n</code></pre></div><h2 id="atmodal-参数"><a class="header-anchor" href="#atmodal-参数" aria-hidden="true">#</a> AtModal 参数</h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>title</td><td>元素的标题</td><td>String</td><td>-</td><td>-</td></tr><tr><td>content</td><td>元素的内容</td><td>String</td><td>-</td><td>-</td></tr><tr><td>cancelText</td><td>取消按钮的文本</td><td>String</td><td>-</td><td>-</td></tr><tr><td>closeOnClickOverlay</td><td>点击浮层的时候时候自动关闭</td><td>Boolean</td><td>-</td><td><code>true</code></td></tr><tr><td>confirmText</td><td>确认按钮的文本</td><td>String</td><td>-</td><td>-</td></tr><tr><td>isOpened</td><td>是否显示模态框</td><td>Boolean</td><td>-</td><td><code>false</code></td></tr></tbody></table><h2 id="atmodal-事件"><a class="header-anchor" href="#atmodal-事件" aria-hidden="true">#</a> AtModal 事件</h2><table><thead><tr><th>事件名称</th><th>说明</th><th>返回参数</th></tr></thead><tbody><tr><td>onClose</td><td>触发关闭时的事件</td><td>-</td></tr><tr><td>onCancel</td><td>点击取消按钮触发的事件</td><td>-</td></tr><tr><td>onConfirm</td><td>点击确认按钮触发的事件</td><td>-</td></tr></tbody></table>',17);e.render=function(n,s,e,p,l,c){return a(),t("div",null,[o])};export default e;export{s as __pageData};
