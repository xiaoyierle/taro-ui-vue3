import{f as t,g as a,B as s}from"./common-03e26d29.js";const n='{"title":"Toast 轻提示","frontmatter":{},"headers":[{"level":2,"title":"使用指南","slug":"使用指南"},{"level":2,"title":"一般用法","slug":"一般用法"},{"level":2,"title":"AtToast 参数","slug":"attoast-参数"},{"level":2,"title":"AtToast 事件","slug":"attoast-事件"}],"relativePath":"docs/toast.md","lastUpdated":1607242431016.5227}';var d={};const e=s('<h1 id="toast-轻提示"><a class="header-anchor" href="#toast-轻提示" aria-hidden="true">#</a> Toast 轻提示</h1><hr><p>提供一个简单的 <code>Toast</code>，可以传入 <code>icon</code>、<code>image</code> 来展示不同的效果，另外提供日常使用频繁的三种状态来快速实现效果，页面层级为<code>1090</code></p><h2 id="使用指南"><a class="header-anchor" href="#使用指南" aria-hidden="true">#</a> 使用指南</h2><p>在 Taro 文件中引入组件</p><div class="language-typescript"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> AtToast <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;taro-ui-vue3&#39;</span>\n</code></pre></div><p><strong>组件依赖的样式文件（仅按需引用时需要）</strong></p><div class="language-scss"><pre><code><span class="token keyword">@import</span> <span class="token string">&quot;taro-ui-vue3/dist/style/components/toast.scss&quot;</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="一般用法"><a class="header-anchor" href="#一般用法" aria-hidden="true">#</a> 一般用法</h2><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AtToast</span> <span class="token attr-name">isOpened</span> <span class="token attr-name">:text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>icon<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>AtToast</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h2 id="attoast-参数"><a class="header-anchor" href="#attoast-参数" aria-hidden="true">#</a> AtToast 参数</h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>text</td><td>元素的内容</td><td>String</td><td>-</td><td>-</td></tr><tr><td>icon</td><td>icon 的类型</td><td>String</td><td>-</td><td>-</td></tr><tr><td>image</td><td>元素展示的图片</td><td>String</td><td>-</td><td>-</td></tr><tr><td>status</td><td>元素的状态</td><td>String</td><td><code>error</code>, <code>loading</code>, <code>success</code></td><td>-</td></tr><tr><td>isOpened</td><td>是否展示元素</td><td>Boolean</td><td>-</td><td><code>false</code></td></tr><tr><td>duration</td><td>元素持续的事件（设置为 0 将不会自动消失）</td><td>Number</td><td>-</td><td><code>3000</code></td></tr><tr><td>hasMask</td><td>是否存在底部遮罩层(无法点击底部的内容区)</td><td>Boolean</td><td>-</td><td>-</td></tr></tbody></table><h2 id="attoast-事件"><a class="header-anchor" href="#attoast-事件" aria-hidden="true">#</a> AtToast 事件</h2><table><thead><tr><th>事件名称</th><th>说明</th><th>返回参数</th></tr></thead><tbody><tr><td>onClick</td><td>元素被点击之后触发的事件</td><td>-</td></tr><tr><td>onClose</td><td>元素被关闭之后触发的事件</td><td>-</td></tr></tbody></table>',14);d.render=function(s,n,d,o,r,c){return t(),a("div",null,[e])};export default d;export{n as __pageData};
