import{f as n,g as a,B as s}from"./common-03e26d29.js";const t='{"title":"VirtualScroll 虚拟列表","frontmatter":{},"headers":[{"level":2,"title":"使用指南","slug":"使用指南"},{"level":3,"title":"一般用法","slug":"一般用法"},{"level":3,"title":"触顶和触底事件","slug":"触顶和触底事件"},{"level":3,"title":"跳转至指定列表行数","slug":"跳转至指定列表行数"},{"level":3,"title":"自定义虚拟列表顶部或底部内容","slug":"自定义虚拟列表顶部或底部内容"},{"level":2,"title":"AtVirtualScroll 参数","slug":"atvirtualscroll-参数"},{"level":2,"title":"AtVirtualScroll 事件","slug":"atvirtualscroll-事件"},{"level":2,"title":"AtVirtualScroll 插槽","slug":"atvirtualscroll-插槽"}],"relativePath":"docs/virtualscroll.md","lastUpdated":1607242431040.5002}';var p={};const o=s('<h1 id="virtualscroll-虚拟列表"><a class="header-anchor" href="#virtualscroll-虚拟列表" aria-hidden="true">#</a> VirtualScroll 虚拟列表</h1><hr><p>虚拟列表组件，提供长列表渲染性能。</p><p align="center"><image src="../_assets/virtual-scroll props.png"></image><image src="../_assets/virtual-scroll animation.gif"></image></p><h2 id="使用指南"><a class="header-anchor" href="#使用指南" aria-hidden="true">#</a> 使用指南</h2><p>在 Taro 文件中引入组件</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> AtVirtualScroll <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;taro-ui-vue3&#39;</span>\n</code></pre></div><p><strong>组件依赖的样式文件（仅按需引用时需要）</strong></p><div class="language-scss"><pre><code><span class="token keyword">@import</span> <span class="token string">&quot;taro-ui-vue3/dist/style/components/virtual-scroll.scss&quot;</span><span class="token punctuation">;</span>\n</code></pre></div><h3 id="一般用法"><a class="header-anchor" href="#一般用法" aria-hidden="true">#</a> 一般用法</h3><p>所有参数均可动态绑定。可配合 <code>AtListItem</code>、 <code>AtCard</code>、 <code>AtSwipeAction</code> 等组件使用。</p><div class="language-html"><pre><code><span class="token comment">&lt;!-- template --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>at-virtual-scroll</span>\n  <span class="token attr-name">bench</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>5<span class="token punctuation">&quot;</span></span>\n  <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>300<span class="token punctuation">&quot;</span></span>\n  <span class="token attr-name">:items</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>items<span class="token punctuation">&quot;</span></span>\n  <span class="token attr-name">:item-height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>itemHeight<span class="token punctuation">&quot;</span></span>\n<span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ index, item }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>at-list-item</span>\n      <span class="token attr-name">arrow</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>right<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.title<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">:note</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.text<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">:thumb</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.imgURL<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">:extraText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>`第 ${index} / ${items.length} 条`<span class="token punctuation">&quot;</span></span>\n    <span class="token punctuation">/&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>at-virtual-scroll</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><div class="language-ts"><pre><code><span class="token comment">// &lt;script=&quot;ts&quot;&gt;</span>\n<span class="token keyword">interface</span> <span class="token class-name">DataItem</span> <span class="token punctuation">{</span>\n  title<span class="token operator">:</span> <span class="token builtin">string</span>\n  text<span class="token operator">:</span> <span class="token builtin">string</span>\n  imgURL<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  components<span class="token operator">:</span> <span class="token punctuation">{</span> AtVirtualScroll <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> itemHeight <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> items<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>DataItem<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      items<span class="token punctuation">,</span>\n      itemHeight\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><h3 id="触顶和触底事件"><a class="header-anchor" href="#触顶和触底事件" aria-hidden="true">#</a> 触顶和触底事件</h3><p>该组件提供了列表滚动到顶部以及底部时触发的两个事件：</p><ul><li><code>onReachTop</code> : 向上滚动，到达触顶阈值 ( <code>reachTopThreshold</code> ) 设置的位置时触发</li><li><code>onReachBottom</code> : 向下滚动，到达触底阈值 ( <code>reachBottomThreshold</code> ) 设置的位置时触发</li></ul><div class="language-html"><pre><code><span class="token comment">&lt;!-- template --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>at-virtual-scroll</span>\n  <span class="token attr-name">bench</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>5<span class="token punctuation">&quot;</span></span>\n  <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>300<span class="token punctuation">&quot;</span></span>\n  <span class="token attr-name">item-height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>64<span class="token punctuation">&quot;</span></span>\n  <span class="token attr-name">:items</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>items<span class="token punctuation">&quot;</span></span>\n  <span class="token attr-name">@reach-top</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleReachTop<span class="token punctuation">&quot;</span></span>\n  <span class="token attr-name">@reach-bottom</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleReachBottom<span class="token punctuation">&quot;</span></span>\n<span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ index, item }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>at-list-item</span>\n      <span class="token attr-name">arrow</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>right<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.title<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">:note</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.text<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">:thumb</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.imgURL<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">:extraText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>`第 ${index} / ${items.length} 条`<span class="token punctuation">&quot;</span></span>\n    <span class="token punctuation">/&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>at-virtual-scroll</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><div class="language-ts"><pre><code><span class="token comment">// &lt;script=&quot;ts&quot;&gt;</span>\n<span class="token keyword">interface</span> <span class="token class-name">DataItem</span> <span class="token punctuation">{</span>\n  title<span class="token operator">:</span> <span class="token builtin">string</span>\n  text<span class="token operator">:</span> <span class="token builtin">string</span>\n  imgURL<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  components<span class="token operator">:</span> <span class="token punctuation">{</span> AtVirtualScroll <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> itemHeight <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> items<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>DataItem<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">function</span> <span class="token function">handleReachTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      Taro<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">reachTop 刷新数据</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n        icon<span class="token operator">:</span> <span class="token string">&#39;loading&#39;</span><span class="token punctuation">,</span>\n        duration<span class="token operator">:</span> <span class="token function">genRandomNumber</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token function">success</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token comment">// 模拟刷新数据</span>\n          items<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token function">refreshData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">function</span> <span class="token function">handleReachBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      Taro<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">reachBottom 加载数据</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n        icon<span class="token operator">:</span> <span class="token string">&#39;loading&#39;</span><span class="token punctuation">,</span>\n        duration<span class="token operator">:</span> <span class="token function">genRandomNumber</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n          <span class="token comment">// 模拟加载数据 -&gt; 附加 100 条数据</span>\n          items<span class="token punctuation">.</span>value <span class="token operator">=</span> items<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token function">getMoreData</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      items<span class="token punctuation">,</span>\n      itemHeight<span class="token punctuation">,</span>\n      handleReachTop<span class="token punctuation">,</span>\n      handleReachBottom\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><h3 id="跳转至指定列表行数"><a class="header-anchor" href="#跳转至指定列表行数" aria-hidden="true">#</a> 跳转至指定列表行数</h3><p>组件提供了 <code>scrollIntoItem</code> 参数，该参数应为 <code>列表行数的索引值</code>，即传入默认插槽的 <code>index</code>。设置该参数后，可视区域会滚动至该单项所在的区域。</p><div class="language-html"><pre><code><span class="token comment">&lt;!-- template --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>controller<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>at-button</span>\n      <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>secondary<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scrollToItem<span class="token punctuation">&quot;</span></span>\n    <span class="token punctuation">&gt;</span></span>随机跳转至第 N 条数据<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>at-button</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>at-virtual-scroll</span>\n    <span class="token attr-name">bench</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>5<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>300<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">item-height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>64<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:items</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>items<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:scroll-into-item</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>toItem<span class="token punctuation">&quot;</span></span>\n  <span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ index, item }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>at-list-item</span>\n        <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">arrow</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>right<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.title<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:note</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.text<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:thumb</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.imgURL<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:extraText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>`第 ${index} / ${items.length} 条`<span class="token punctuation">&quot;</span></span>\n      <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>at-virtual-scroll</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><div class="language-ts"><pre><code><span class="token comment">// &lt;script=&quot;ts&quot;&gt;</span>\n<span class="token keyword">interface</span> <span class="token class-name">DataItem</span> <span class="token punctuation">{</span>\n  title<span class="token operator">:</span> <span class="token builtin">string</span>\n  text<span class="token operator">:</span> <span class="token builtin">string</span>\n  imgURL<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  components<span class="token operator">:</span> <span class="token punctuation">{</span> AtVirtualScroll <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> toItem <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> items<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>DataItem<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    \n    <span class="token keyword">function</span> <span class="token function">genRandomIndex</span><span class="token punctuation">(</span>length<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">function</span> <span class="token function">scrollToItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      toItem<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token function">genRandomIndex</span><span class="token punctuation">(</span>items<span class="token punctuation">.</span>length<span class="token punctuation">)</span>\n      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">随机跳转至: 第 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>toItem<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> 条</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      toItem<span class="token punctuation">,</span>\n      scrollToItem\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><h3 id="自定义虚拟列表顶部或底部内容"><a class="header-anchor" href="#自定义虚拟列表顶部或底部内容" aria-hidden="true">#</a> 自定义虚拟列表顶部或底部内容</h3><p>组件提供了 <code>header</code> 和 <code>footer</code> 插槽，可用于自定义虚拟列表顶部或底部的内容。</p><div class="language-html"><pre><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>at-virtual-scroll</span>\n    <span class="token attr-name">bench</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>5<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>300<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">item-height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>64<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:items</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>items<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:scroll-into-item</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>toItem<span class="token punctuation">&quot;</span></span>\n  <span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#header</span><span class="token punctuation">&gt;</span></span>\n      <span class="token comment">&lt;!-- 虚拟列表顶部区域 --&gt;</span>\n      <span class="token comment">&lt;!-- 可自定义用于控制虚拟列表的控制组件：如搜索、跳转等等 --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ index, item }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token comment">&lt;!-- 虚拟列表区域 --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#header</span><span class="token punctuation">&gt;</span></span>\n      <span class="token comment">&lt;!-- 虚拟列表底部区域 --&gt;</span>\n      <span class="token comment">&lt;!-- 可结合 reachBottomThreshold, onReachBottom 自定义加载组件 --&gt;</span>\n      <span class="token comment">&lt;!-- 或显示列表之外的内容 --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>at-virtual-scroll</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h2 id="atvirtualscroll-参数"><a class="header-anchor" href="#atvirtualscroll-参数" aria-hidden="true">#</a> AtVirtualScroll 参数</h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>bench</td><td>列表渲染提前量，即在可视区域之外提前渲染的列表行数。 值设置得越高，快速滚动时出现白屏的概率就越小；相应地，每次滚动的性能会变得越差。</td><td><code>Number | String</code></td><td>-</td><td><code>0</code></td></tr><tr><td>itemHeight</td><td>列表单项高度，用于计算列表单项的 <code>top</code> 样式值，单位 <code>px</code>。必填</td><td><code>Number | String</code></td><td>-</td><td>-</td></tr><tr><td>items</td><td>渲染数据，必填</td><td><code>Array&lt;any&gt;</code></td><td>-</td><td>-</td></tr><tr><td>height</td><td>列表的高度，作为 css 样式值，单位 <code>px</code></td><td><code>Number | String</code></td><td>-</td><td>-</td></tr><tr><td>maxHeight</td><td>置组件的最大高度</td><td><code>Number | String</code></td><td>-</td><td>-</td></tr><tr><td>minHeight</td><td>设置组件的最小高度</td><td><code>Number | String</code></td><td>-</td><td>-</td></tr><tr><td>maxWidth</td><td>设置组件的最大宽度</td><td><code>Number | String</code></td><td>-</td><td>-</td></tr><tr><td>minWidth</td><td>设置组件的最小宽度</td><td><code>Number | String</code></td><td>-</td><td>-</td></tr><tr><td>width</td><td>设置组件的宽度</td><td><code>Number | String</code></td><td>-</td><td>-</td></tr><tr><td>scrollIntoItem</td><td>列表单项的索引值，设置后，可视区域滚动至该单项所在区域</td><td><code>Number | String</code></td><td>-</td><td>-</td></tr><tr><td>reachTopThreshold</td><td>触顶阈值，距顶部多远时（单位 <code>px</code>），触发 <code>onReachTop</code> 事件</td><td><code>Number | String</code></td><td>-</td><td><code>50</code></td></tr><tr><td>reachBottomThreshold</td><td>触底阈值，距底部多远时（单位 <code>px</code>），触发 <code>onReachBottom</code> 事件</td><td><code>Number | String</code></td><td>-</td><td><code>50</code></td></tr></tbody></table><h2 id="atvirtualscroll-事件"><a class="header-anchor" href="#atvirtualscroll-事件" aria-hidden="true">#</a> AtVirtualScroll 事件</h2><table><thead><tr><th>事件名称</th><th>说明</th><th>返回参数</th></tr></thead><tbody><tr><td>onReachTop</td><td>滚动到顶部时触发的事件</td><td>-</td></tr><tr><td>onReachBottom</td><td>滚动到底部时触发的事件</td><td>-</td></tr></tbody></table><h2 id="atvirtualscroll-插槽"><a class="header-anchor" href="#atvirtualscroll-插槽" aria-hidden="true">#</a> AtVirtualScroll 插槽</h2><table><thead><tr><th>插槽名称</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>default</td><td>用于自定义列表项目的默认 <code>scoped</code> 插槽</td><td><code>{ index: number, item: any }</code></td></tr><tr><td>header</td><td>用于自定义<code>列表顶部</code>内容的插槽</td><td><code>-</code></td></tr><tr><td>footer</td><td>用于自定义<code>列表底部</code>内容的插槽</td><td><code>-</code></td></tr></tbody></table>',31);p.render=function(s,t,p,e,c,l){return n(),a("div",null,[o])};export default p;export{t as __pageData};
